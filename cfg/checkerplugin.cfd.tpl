Интсрукция как писать описание чекеров

Результатом работы плагина должна быть секция CMD, которая бы запустила анализатор
файла исходных кодов, а также секция RESULT, которая описывает как разбирать результат анализа.

1. Служебные секции:
каждая секция состоит из имени и содержимого [имя]{содержимое}. Содержимое может быть однострочным 
и многострочным, скобочки содержимого могут быть такого вида:
1) NAME{descr}
2) NAME{
descr}
3) NAME{
descr
}
4) NAME
{
descr
}
5) NAME
{descr}
...

Значения секций:
NAME - имя плагина отображаемого при выводе команды help или list(сводится в одну строку)
DESCRIPTION - описание плагина(сводится в одну строку)
ID - идентификатор [a-zA-Z] для использования при конфигурировании(1 строка, остальные не анализируются)
TYPE - тип плагина и анализируемых параметров: 1 - cppcheck подобный вывод, 2 - rats подобный вывод(т.е без шаблона и описание идет одной строкой после вывода ошибки)
OPTIONS - список параметров передаваемых чекеру, параметры разделяются концом строки. Могут содержать переменные,
которые начинаются с $, если переменная не описана в конфигурационном файле и анализатор не знает как ее вычислить, то параметр удаляется из списка OPTIONS
LANG - список расширений файлов и соответствия какой язык с или с++, для анализаторов, которые требуют такого анализа
RESULT - список параметров, которые будут парсится в выходном файле и 
    разделитель DELIMIT=, каждый параметр через запятую или с новой строки.
    уровни HIGH,MEDIUM,LOW=с перечислением какие идентификаторы ошибки к чему причислять
    и STREAM= отуда читать сведения о результате из stderr или stdout
CMD - команда для запуска чекера
DEFS - шаблон, как формировать список опеределений, можно указывать $:, $:, $: и т.д. Это значит что вмето
первого $: подставится первый параметр, вместо второго - второй и т.д
FILENAME - шаблон, как передавть имя файла, задается как $FILE
INCLUDES - шаблон, как формировать список includes, можно указывать $:, $:, $: и т.д
ONLYCHEK - не анализировать файлы при компилляции, только пройтись по каталогам и найти все файлы с расширениями
COMPOSE - группировать файлы для аналитической комнады

2. Переменные:

Переменные делятся на Подстановочные и Кастомные и Генерируемые.

Постановочные:
перемнные которые формирует сам анализатор:
STD, ARCH, PLAT - если анализатор не смог сам опреедлить, то берется то, что задано в конфигурационном файле

Генерируемые:
NAME, DESCRIPTION, ID, TYPE, OPTIONS, LANG, RESULT, CMD, DEFS, FILENAME, INCLUDES - эти
переменные всегда определяются анализатором на основе заданных секций или если не заданы, то равны пустой строке

Кастомные:
переменные которые полностью определяются конфигурационным файлом

Вид переменной может задаваться как:
_[имя перемнной]{
[значение по умлчанию]
DEF=[операций командной строки]
CMD=[операция командной строки]
}
здесь: 
DEF - команда, котороая формирует значение по умолчанию
CMD - команда для получения значения переменной
значение по умлчанию - если не определено DEF и CMD и не требуеся запуск стороннего приложения

